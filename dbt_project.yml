
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'vizio_poc_databricks'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'vizio_poc_databricks'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

#vars:
#  table_prefix: "{{ env_var('DBT_TBL_PREFIX') }}" # define a table prefix to use for tables to be created

flags:
  use_materialization_v2: true

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  vizio_poc_databricks:
    # Config indicated by + and applies to all files under models/example/
    +materialized: table
    +transient: false
    +persist_docs:
      relation: true
      columns: true
      
    vizio:
      +tags: 
        - vizio
      +database: akkio_poc
      # Databricks optimizations for large-scale processing
      # +file_format: delta
      # +on_schema_change: 'sync_all_columns'
      # Enable Auto Optimize for all tables
      # +tblproperties:
      #   delta.autoOptimize.optimizeWrite: 'true'
      #   delta.autoOptimize.autoCompact: 'true'
      #   delta.checkpoint.writeStatsAsJson: 'false'
      #   delta.checkpoint.writeStatsAsStruct: 'true'
